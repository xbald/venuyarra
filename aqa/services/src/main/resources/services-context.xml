<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:amq="http://activemq.apache.org/schema/core"
       xmlns:int-jdbc="http://www.springframework.org/schema/integration/jdbc"
       xmlns:int="http://www.springframework.org/schema/integration"
       xsi:schemaLocation=
               "http://www.springframework.org/schema/beans
               http://www.springframework.org/schema/beans/spring-beans.xsd
               http://activemq.apache.org/schema/core
               http://activemq.apache.org/schema/core/activemq-core.xsd
               http://www.springframework.org/schema/integration
               http://www.springframework.org/schema/integration/spring-integration.xsd
               http://www.springframework.org/schema/integration/jdbc
               http://www.springframework.org/schema/integration/jdbc/spring-integration-jdbc.xsd">

    <!-- Configure the ActiveMQ Queue Factory -->
    <import resource="classpath:dao-context.xml"/>


<!--
    <amq:broker useJmx="true" persistent="true">
        <amq:transportConnectors>
            <amq:transportConnector name="tcp" uri="${jms.broker.url}"/>
        </amq:transportConnectors>

        <amq:networkConnectors>
            <amq:networkConnector uri="static:(tcp://0.0.0.0:61616)"/>
        </amq:networkConnectors>
    </amq:broker>
-->

    <bean id="xaFactory" class="org.apache.activemq.ActiveMQXAConnectionFactory">
        <property name="brokerURL" value="failover:${jms.broker.url}"/>
    </bean>

    <bean id="suiteDispatcher" class="com.venuyarra.aqa.services.impl.SuiteDispatcherServiceImpl">
        <property name="testSuiteService" ref="testSuiteService"/>
        <property name="messagingService" ref="messageService"/>
    </bean>

    <!-- Configure the ActiveMQ Queue for test suites -->
    <bean id="suitesQueue" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg value="${jms.suites.queue.name}"/>
    </bean>

    <!-- Configure the ActiveMQ Queue for results -->
    <bean id="resultsQueue" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg value="${jms.results.queue.name}"/>
    </bean>

    <bean id="connectionFactoryBean"
          class="com.atomikos.jms.AtomikosConnectionFactoryBean"
          init-method="init"
          destroy-method="close">
        <property name="maxPoolSize" value="50"/>
        <property name="uniqueResourceName" value="localhost"/>
        <property name="xaConnectionFactory" ref="xaFactory"/>
    </bean>

    <!--   <bean id="listenerConnectionFactoryBean"
             class="com.atomikos.jms.AtomikosConnectionFactoryBean"
             init-method="init"
             destroy-method="close">
           <property name="uniqueResourceName" value="listenerResource"/>
           <property name="xaConnectionFactory" ref="xaFactory"/>
       </bean>
   -->
    <bean id="singleConnectionFactory" class="org.springframework.jms.connection.SingleConnectionFactory">
        <property name="targetConnectionFactory" ref="connectionFactoryBean"/>
        <property name="clientId" value="AQA_SERVER1"/>
    </bean>

    <bean id="aqaJmsTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="connectionFactoryBean"/>
        <property name="defaultDestination" ref="suitesQueue"/>
        <property name="receiveTimeout" value="3000"/>
        <property name="sessionTransacted" value="true"/>
    </bean>

    <bean id="seleniumCommandService" class="com.venuyarra.aqa.services.impl.SeleniumCommandServiceImpl">
        <property name="seleniumCommandDao" ref="seleniumCommandDao"/>
        <property name="parameterDao" ref="parameterDao"/>
    </bean>

    <bean id="testCaseService" class="com.venuyarra.aqa.services.impl.TestCaseServiceImpl">
        <property name="testCaseDao" ref="testCaseDao"/>
        <property name="seleniumCommandService" ref="seleniumCommandService"/>
    </bean>

    <bean id="testSuiteService" class="com.venuyarra.aqa.services.impl.TestSuiteServiceImpl">
        <property name="testSuiteDao" ref="testSuiteDao"/>
        <property name="testCaseService" ref="testCaseService"/>
    </bean>

    <bean id="messageService" class="com.venuyarra.aqa.services.impl.MessagingServiceImpl">
        <property name="aqaJmsTemplate" ref="aqaJmsTemplate"/>
    </bean>

    <bean id="resultsService" class="com.venuyarra.aqa.services.impl.ResultsServiceImpl">
        <property name="resultDao" ref="resultDao"/>
    </bean>

    <bean id="resultsProcessor" class="com.venuyarra.aqa.services.impl.ResultsProcessor">
        <property name="resultService" ref="resultsService"/>
    </bean>

    <bean id="myDurableConsumer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="singleConnectionFactory"/>
        <property name="transactionManager" ref="transactionManager"/>
        <property name="sessionTransacted" value="true"/>
        <property name="subscriptionDurable" value="true"/>
        <property name="durableSubscriptionName" value="AQA_SERVER7"/>
        <property name="destination" ref="resultsQueue"/>
        <property name="messageListener" ref="resultsProcessor"/>
        <property name="concurrentConsumers" value="1"/>
        <property name="maxConcurrentConsumers" value="1"/>
        <property name="receiveTimeout" value="10000"/>
        <property name="idleTaskExecutionLimit" value="10"/>
        <property name="idleConsumerLimit" value="5"/>
    </bean>

    <int:channel id="target"/>

    <int-jdbc:inbound-channel-adapter
            auto-startup="true"
            query="select * from cmatrix_suite_execution_queue where status='PLANNED'"
            channel="target"
            data-source="dataSource"
            row-mapper="testTaskRowMapper"
            update="update cmatrix_suite_execution_queue set status='PROCESSED' where id in (:id)">
        <int:poller fixed-rate="2000">
            <int:transactional/>
        </int:poller>
    </int-jdbc:inbound-channel-adapter>

    <int:service-activator
            id="serviceActivator"
            ref="suiteDispatcher" input-channel="target" method="dispatchSuite"/>
</beans>
